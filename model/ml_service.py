import json
import time
import pandas as pd
import numpy as np
import pickle
import redis
import settings

# Connect to Redis and assign to variable `db`
db = redis.Redis(
    port = settings.REDIS_PORT,
    db = settings.REDIS_DB_ID,
    host = settings.REDIS_IP
)

#Load the pipeline for preprocessing.
with open('./pickles/pipeline_fit.pickle', 'rb') as f:
    pipeline = pickle.load(f)

#Load the fitted model to make predictions
model_fit = pickle.load(open('./pickles/model_fit.pickle', 'rb'))

# Unbound the pipeline and the model
prepocessing = pipeline
model = model_fit

def predict(form):
    '''
    Load the dictionary generated by the form, and then, run the ML model to get predictions.

    Parameters
    ----------
    form : dict

    Returns
    -------
    accu, prob : tuple(str, float)
        Model predicted accuracy as a string and the corresponding confidence
        score(probability) as a number.
    '''
    accu = None
    prob = None

    form = pd.DataFrame.from_dict(form, orient='index').T

    # I change the type of some columns.
    form[['NACIONALITY', 'PAYMENT_DAY', 'MARITAL_STATUS', 'FLAG_EMAIL', 'FLAG_VISA', 'FLAG_MASTERCARD', 'FLAG_DINERS',
     'FLAG_AMERICAN_EXPRESS', 'FLAG_OTHER_CARDS', 'QUANT_CARS', 'PRODUCT', 'TOTAL_INCOMES',
      'PROFESSIONAL_PHONE_AREA_CODE', 'RESIDENCIAL_ZIP_3', 'PROFESSIONAL_ZIP_3']].apply(lambda x: x.astype('int64'))

    # Prepocessing the data of the form.
    preprocess = prepocessing.transform(form)

    # Predict with the new data.
    pred = model.predict(preprocess)
    prob = model.predict_proba(preprocess)

    accu = pred
    prob = prob[0][1]

    return accu, round(float(prob), 4)

def classify_process():
    '''
    Loop indefinitely asking Redis for new jobs.
    When a new job arrives, takes it from the Redis queue, uses the loaded ML
    model to get predictions and stores the results back in Redis using
    the original job ID so other services can see it was processed and access
    the results.

    Load data from the corresponding folder based on the form
    received, then, run our ML model to get predictions.
    '''
    while True:

        _, job_data = db.brpop(settings.REDIS_QUEUE)

        job_data = json.loads(job_data)
 
        pred, proba = predict(job_data['form'])

        preddict = {
            'prediction' : int(pred),
            'probability' : str(proba)
        }

        output = json.dumps(preddict)

        db.set(job_data['id'], output)
      
        time.sleep(settings.SERVER_SLEEP)

if __name__ == '__main__':
    
    # Now launch process
    print('Launching ML service...')

    classify_process()